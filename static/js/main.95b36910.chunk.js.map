{"version":3,"sources":["components/app/app.js","utils/formatters/format-price/format-price.js","utils/formatters/format-modifier/format-modifier.js","utils/formatters/format-weight/format-weight.js","utils/formatters/format-economy/format-economy.js","components/local-economy-table/local-economy-table.js","data/trade-goods/trade-goods.js","data/demand-levels/demand-levels.js","components/buy-calculator/buy-calculator.js","components/sell-calculator/sell-calculator.js","components/trading-calculator/trading-calculator.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","toolbar","mixins","App","classes","className","CssBaseline","Container","FormatPrice","price","gp","Math","floor","gpRemainder","sp","cp","result","trim","FormatModifier","modifier","percentage","formatWeight","weight","lb","oz","toFixed","formatEconomy","economy","format","forEach","item","tradeGood","title","formatPrice","demandLevel","isSpeciality","formatEconomyMarkdown","formatEconomyBBCode","buttons","padding","spacing","display","justifyContent","primaryButton","marginRight","button","paddingLeft","LocalEconomyTable","props","localEconomy","demandLevels","onChange","copyEconomy","navigator","clipboard","writeText","updateDemandLevel","itemIndex","updatedLocalEconomy","rollDice","sides","random","TableContainer","Table","size","TableHead","TableRow","TableCell","TableBody","map","hover","key","Select","fullWidth","disableUnderline","value","e","target","MenuItem","formatModifier","Button","color","onClick","randomEconomy","demandRoll","find","maxRoll","length","rollEconomy","TradeGoods","DemandLevels","BuyCalculator","useState","selectedItem","setSelectedItem","quantity","setQuantity","tradeModifier","setTradeModifier","basePrice","localPrice","tradePrice","Grid","container","xs","sm","FormControl","variant","InputLabel","id","labelId","label","TextField","type","inputProps","min","readOnly","md","SellCalculator","specialityModifier","setSpecialityModifier","tabs","marginBottom","TradingCalculator","defaultDemandLevel","activeTab","setActiveTab","setLocalEconomy","content","Typography","Paper","Tabs","indicatorColor","Tab","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.95b36910.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles, Container, CssBaseline } from '@material-ui/core'\nimport { TradingCalculator } from '../';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  toolbar: theme.mixins.toolbar,\n}));\n\nconst App = () => {\n\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <div className={classes.toolbar} />\n      <Container>\n        <TradingCalculator />\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","const FormatPrice = (price) => {\n  const gp = Math.floor(price / 100)\n  const gpRemainder = price % 100\n  const sp = Math.floor(gpRemainder / 10)\n  const cp = Math.floor(gpRemainder % 10)\n  let result = \"\"\n  if (gp !== 0) {\n    result += `${gp}\\u00A0gp `\n  }\n  if (sp !== 0) {\n    result += `${sp}\\u00A0sp `\n  }\n  if (cp !== 0) {\n    result += `${cp}\\u00A0cp`\n  }\n  return result.trim()\n}\n\nexport default FormatPrice","const FormatModifier = (modifier) => {\n  const percentage = Math.floor(modifier * 100)\n  if (percentage >= 0) {\n    return `+${percentage}%`\n  } else {\n    return `${percentage}%`\n  }\n}\n\nexport default FormatModifier","const formatWeight = (weight) => {\n  const lb = Math.floor(weight / 16)\n  const oz = weight % 16\n  let result = \"\"\n  if (lb > 0) {\n    result += `${lb}lb`\n  }\n  if (oz > 0) {\n    result += ` ${oz}oz`\n    result += ` (~${(weight/16).toFixed(2)}lb)`\n  }\n  return result.trim()\n}\n\nexport default formatWeight","import { formatPrice } from \"../\"\n\nconst formatEconomyMarkdown = (economy) => {\n  let result = \"\"\n    result += \"| Trade Good | Base Price | Demand | Is Speciality |\\n\"\n    result += \"|:---|:---:|:---:|:---:|\\n\"\n    economy.forEach(item => {\n      result += \"| \"\n      result += `${item.tradeGood.title} | `\n      result += `${formatPrice(item.tradeGood.price)} | `\n      result += `${(item.demandLevel.title)} | `\n      result += `${(item.isSpeciality ? \"Yes\" : \"No\")}|\\n`\n    });\n    return result\n}\n\nconst formatEconomyBBCode = (economy) => {\n  let result = \"[table]\\n\"\n    result += \"[tr]\"\n    result += \"[th]Trade Good[/th]\"\n    result += \"[th]Base Price[/th]\"\n    result += \"[th]Demand[/th]\"\n    result += \"[th]Is Speciality[/th]\"\n    result += \"[/tr]\\n\"\n    economy.forEach(item => {\n      result += \"[tr]\"\n      result += `[td]${item.tradeGood.title}[/td]`\n      result += `[td]${formatPrice(item.tradeGood.price)}[/td]`\n      result += `[td]${(item.demandLevel.title)}[/td]`\n      result += `[td]${(item.isSpeciality ? \"Yes\" : \"No\")}[/td]`\n      result += \"[/tr]\\n\"\n    });\n    result += \"[/table]\"\n    return result\n}\n\nconst formatEconomy = (economy, format) => {\n  switch (format) {\n    case \"markdown\":\n      return formatEconomyMarkdown(economy)\n    case \"bbcode\":\n      return formatEconomyBBCode(economy)\n    default:\n      break;\n  }\n}\n\nexport default formatEconomy","import React from 'react'\nimport { Table, TableHead, TableCell, TableBody, TableRow, TableContainer, Button, makeStyles, Select, MenuItem } from '@material-ui/core'\nimport { formatPrice, formatModifier, formatWeight } from '../../utils'\nimport { formatEconomy } from '../../utils/formatters/format-economy'\n\nconst useStyles = makeStyles((theme) => ({\n  buttons: {\n    padding: theme.spacing(1),\n    display: \"flex\",\n    flexGrow: 1,\n    justifyContent: \"flex-end\"\n  },\n  primaryButton: {\n    marginRight: \"auto\"\n  },\n  button: {\n    paddingLeft: theme.spacing(1),\n  }\n}))\n\nconst LocalEconomyTable = (props) => {\n  const localEconomy = props.localEconomy || []\n  const demandLevels = props.demandLevels || []\n  const onChange = props.onChange || (() => { })\n  const classes = useStyles()\n\n  const copyEconomy = (format) => {\n    const result = formatEconomy(localEconomy, format)\n    navigator.clipboard.writeText(result)\n  }\n\n  const updateDemandLevel = (itemIndex, demandLevel) => {\n    const updatedLocalEconomy = [...localEconomy]\n    updatedLocalEconomy[itemIndex].demandLevel = demandLevel\n    onChange(updatedLocalEconomy)\n  }\n\n  const rollDice = (sides) => {\n    const random = Math.random()\n    return 1 + Math.floor(random * sides)\n  }\n\n  const rollEconomy = () => {\n    const randomEconomy = [...localEconomy]\n    randomEconomy.forEach((item) => {\n      const demandRoll = rollDice(20)\n      item.demandLevel = demandLevels.find((demandLevel) => demandRoll <= demandLevel.maxRoll)\n    })\n    const hasSpeciality = rollDice(2) > 1\n    if (hasSpeciality) {\n      randomEconomy[rollDice(randomEconomy.length)].isSpeciality = true\n    }\n    onChange(randomEconomy)\n  }\n\n  return (\n    <div>\n      <TableContainer>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Trade Good</TableCell>\n              <TableCell>Weight</TableCell>\n              <TableCell>Base Price</TableCell>\n              <TableCell>Demand</TableCell>\n              <TableCell>Demand Modifier</TableCell>\n              <TableCell>Local Price/10</TableCell>\n              <TableCell>Speciality</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {localEconomy.map(((item, itemIndex) => (\n              <TableRow hover key={itemIndex}>\n                <TableCell>{item.tradeGood.title}</TableCell>\n                <TableCell>{formatWeight(item.tradeGood.weight)}</TableCell>\n                <TableCell>{formatPrice(item.tradeGood.price)}</TableCell>\n                <TableCell>\n                  <Select\n                    fullWidth\n                    disableUnderline\n                    value={item.demandLevel}\n                    onChange={e => updateDemandLevel(itemIndex, e.target.value)}\n                  >\n                    {demandLevels.map(demandLevel => (\n                      <MenuItem key={demandLevel.title} value={demandLevel}>{demandLevel.title}</MenuItem>\n                    ))}\n                  </Select>\n                </TableCell>\n                <TableCell>{formatModifier(item.demandLevel.modifier)}</TableCell>\n                <TableCell>{formatPrice(item.tradeGood.price * (1 + item.demandLevel.modifier) * 10)}</TableCell>\n                <TableCell>{item.isSpeciality ? \"Yes\" : \"No\"}</TableCell>\n              </TableRow>\n            )))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <div className={classes.buttons}>\n        <Button className={classes.primaryButton} color=\"primary\" onClick={() => rollEconomy()}>Roll Economy</Button>\n        <Button className={classes.button} onClick={() => copyEconomy(\"markdown\")}>Copy Markdown</Button>\n        <Button className={classes.button} onClick={() => copyEconomy(\"bbcode\")}>Copy BBCode</Button>\n      </div>\n    </div>\n  )\n\n}\n\nexport default LocalEconomyTable","let TradeGoods = [\n  {\n    title: \"1 lb. of wheat\",\n    price: 1,\n    weight: 16\n  },\n  {\n    title: \"1 lb. of flour\",\n    price: 2,\n    weight: 16\n  },\n  {\n    title: \"1 lb. of salt\",\n    price: 5,\n    weight: 16\n  },\n  {\n    title: \"1 lb. of iron\",\n    price: 10,\n    weight: 16\n  },\n  {\n    title: \"1 sq. yd. of canvas\",\n    price: 10,\n    weight: 9\n  },\n  {\n    title: \"1 sq. yd. of cotton cloth\",\n    price: 50,\n    weight: 12\n  },\n  {\n    title: \"1 lb. of ginger\",\n    price: 100,\n    weight: 16\n  },\n  {\n    title: \"1 lb. of cinnamon\",\n    price: 200,\n    weight: 16\n  },\n  {\n    title: \"1 lb. of pepper\",\n    price: 200,\n    weight: 16\n  },\n  {\n    title: \"1 lb. of cloves\",\n    price: 300,\n    weight: 16\n  },\n  {\n    title: \"1 sq. yd. of linen\",\n    price: 500,\n    weight: 9,\n  },\n  {\n    title: \"1 sq. yd. of silk\",\n    price: 1000,\n    weight: 2\n  },\n  {\n    title: \"1 lb. of saffron\",\n    price: 1500,\n    weight: 16\n  }\n]\n\nexport default TradeGoods","const DemandLevels = [\n  {\n    \"title\": \"Extreme Demand\",\n    \"modifier\": 0.15,\n    \"maxRoll\": 1\n  },\n  {\n    \"title\": \"High Demand\",\n    \"modifier\": 0.10,\n    \"maxRoll\": 5\n  },\n  {\n    \"title\": \"Neutral\",\n    \"modifier\": 0,\n    \"maxRoll\": 14\n  },\n  {\n    \"title\": \"Surplus\",\n    \"modifier\": -0.10,\n    \"maxRoll\": 19\n  },\n  {\n    \"title\": \"Extreme Surplus\",\n    \"modifier\": -0.15,\n    \"maxRoll\": 20\n  }\n]\n\nexport default DemandLevels","import React, { useState } from 'react'\nimport { FormControl, Grid, MenuItem, Select, makeStyles, InputLabel, TextField } from '@material-ui/core'\nimport { formatModifier, formatPrice, formatWeight } from '../../utils'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(2)\n  }\n}))\n\nconst BuyCalculator = (props) => {\n  const localEconomy = props.localEconomy || []\n  const [selectedItem, setSelectedItem] = useState(localEconomy[0])\n  const [quantity, setQuantity] = useState(1)\n  const [tradeModifier, setTradeModifier] = useState(0)\n  const classes = useStyles()\n\n  const basePrice = selectedItem.tradeGood.price * quantity\n  const localPrice = basePrice * (1 + selectedItem.demandLevel.modifier)\n  const tradePrice = basePrice * (1 + selectedItem.demandLevel.modifier + tradeModifier)\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <FormControl fullWidth variant=\"outlined\">\n            <InputLabel id=\"trade-good-label\">\n              Trade Good\n            </InputLabel>\n            <Select\n              labelId=\"trade-good-label\"\n              label=\"Trade Good\"\n              value={selectedItem}\n              onChange={e => setSelectedItem(e.target.value)}\n            >\n              {localEconomy.map(item => (\n                <MenuItem key={item.tradeGood.title} value={item}>\n                  {item.tradeGood.title} ({item.demandLevel.title})\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={3}>\n          <TextField\n            fullWidth\n            type=\"number\"\n            label=\"Quantity\"\n            variant=\"outlined\"\n            value={quantity}\n            inputProps={{\n              min: 1\n            }}\n            onChange={e => setQuantity(e.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} sm={3}>\n          <TextField\n            fullWidth\n            label=\"Total Weight\"\n            variant=\"outlined\"\n            inputProps={{ readOnly: true }}\n            value={formatWeight(selectedItem.tradeGood.weight * quantity)}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <TextField\n            fullWidth\n            label=\"Demand Modifier\"\n            variant=\"outlined\"\n            inputProps={{ readOnly: true }}\n            value={formatModifier(selectedItem.demandLevel.modifier)}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <FormControl fullWidth variant=\"outlined\">\n            <InputLabel id=\"trade-check-label\">\n              Trade Check Modifier\n            </InputLabel>\n            <Select\n              labelId=\"trade-check-label\"\n              label=\"Trade Check Modifier\"\n              value={tradeModifier}\n              onChange={e => setTradeModifier(e.target.value)}\n            >\n              {[-0.15, -0.1, 0, 0.1, 0.15].map(value => (\n                <MenuItem key={value} value={value}>\n                  {formatModifier(value)}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <TextField\n            fullWidth\n            label=\"Local Price\"\n            variant=\"outlined\"\n            inputProps={{ readOnly: true }}\n            value={formatPrice(localPrice)}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <TextField\n            fullWidth\n            label=\"Trade Price\"\n            variant=\"outlined\"\n            inputProps={{ readOnly: true }}\n            value={formatPrice(tradePrice)}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default BuyCalculator","import React, { useState } from 'react'\nimport { FormControl, Grid, MenuItem, Select, makeStyles, InputLabel, TextField } from '@material-ui/core'\nimport { formatModifier, formatPrice } from '../../utils'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(2)\n  }\n}))\n\nconst SellCalculator = (props) => {\n  const localEconomy = props.localEconomy || []\n  const [selectedItem, setSelectedItem] = useState(localEconomy[0])\n  const [quantity, setQuantity] = useState(1)\n  const [specialityModifier, setSpecialityModifier] = useState(0)\n  const [tradeModifier, setTradeModifier] = useState(0)\n  const classes = useStyles()\n\n  const basePrice = selectedItem.tradeGood.price * quantity\n  const localPrice = basePrice * (1 + selectedItem.demandLevel.modifier)\n  const tradePrice = basePrice * (1 + selectedItem.demandLevel.modifier + tradeModifier + specialityModifier)\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6}>\n          <FormControl fullWidth variant=\"outlined\">\n            <InputLabel id=\"trade-good-label\">\n              Trade Good\n            </InputLabel>\n            <Select\n              labelId=\"trade-good-label\"\n              label=\"Trade Good\"\n              value={selectedItem}\n              onChange={e => setSelectedItem(e.target.value)}\n            >\n              {localEconomy.map(item => (\n                <MenuItem key={item.tradeGood.title} value={item}>\n                  {item.tradeGood.title} ({item.demandLevel.title})\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <FormControl fullWidth variant=\"outlined\">\n            <InputLabel id=\"speciality-label\">\n              Speciality Modifier\n            </InputLabel>\n            <Select\n              labelId=\"speciality-label\"\n              label=\"Speciality Modifier\"\n              value={specialityModifier}\n              onChange={e => setSpecialityModifier(e.target.value)}\n            >\n              {[0, 0.1, 0.15, 0.2].map(value => (\n                <MenuItem key={value} value={value}>\n                  {formatModifier(value)}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <TextField\n            fullWidth\n            type=\"number\"\n            label=\"Quantity\"\n            variant=\"outlined\"\n            value={quantity}\n            inputProps={{\n              min: 1\n            }}\n            onChange={e => setQuantity(e.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <TextField\n            fullWidth\n            label=\"Demand Modifier\"\n            variant=\"outlined\"\n            inputProps={{ readOnly: true }}\n            value={formatModifier(selectedItem.demandLevel.modifier)}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <FormControl fullWidth variant=\"outlined\">\n            <InputLabel id=\"trade-check-label\">\n              Trade Check Modifier\n            </InputLabel>\n            <Select\n              labelId=\"trade-check-label\"\n              label=\"Trade Check Modifier\"\n              value={tradeModifier}\n              onChange={e => setTradeModifier(e.target.value)}\n            >\n              {[-0.15, -0.1, 0, 0.1, 0.15].map(value => (\n                <MenuItem key={value} value={value}>\n                  {formatModifier(value)}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <TextField\n            fullWidth\n            label=\"Local Price\"\n            variant=\"outlined\"\n            inputProps={{ readOnly: true }}\n            value={formatPrice(localPrice)}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <TextField\n            fullWidth\n            label=\"Trade Price\"\n            variant=\"outlined\"\n            inputProps={{ readOnly: true }}\n            value={formatPrice(tradePrice)}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default SellCalculator","import React, { useState } from 'react'\nimport { TradeGoods, DemandLevels } from '../../data'\nimport { Paper, Tabs, Tab, Typography, makeStyles } from '@material-ui/core'\nimport { LocalEconomyTable } from '../'\nimport { BuyCalculator } from '../buy-calculator'\nimport { SellCalculator } from '../sell-calculator'\n\nconst useStyles = makeStyles((theme) => ({\n  tabs: {\n    marginBottom: theme.spacing(1)\n  }\n}))\n\nconst TradingCalculator = () => {\n\n  const defaultDemandLevel = DemandLevels[Math.floor(DemandLevels.length / 2)]\n  const [activeTab, setActiveTab] = useState(0)\n  const [localEconomy, setLocalEconomy] = useState(TradeGoods.map(tradeGood => ({\n    tradeGood: tradeGood,\n    demandLevel: defaultDemandLevel,\n    isSpeciality: false\n  })))\n\n  const classes = useStyles()\n\n  let content = null\n  switch (activeTab) {\n    case 0:\n      content = <LocalEconomyTable\n        localEconomy={localEconomy}\n        demandLevels={DemandLevels}\n        onChange={(localEconomy) => setLocalEconomy(localEconomy)}\n      />\n      break;\n    case 1:\n      content = <BuyCalculator localEconomy={localEconomy} />\n      break;\n    case 2:\n      content = <SellCalculator localEconomy={localEconomy} />\n      break;\n    default:\n      content = <Typography>Select a Tab</Typography>\n  }\n\n  return (\n    <Paper>\n      <Tabs\n        className={classes.tabs}\n        indicatorColor=\"primary\"\n        value={activeTab}\n        onChange={(e, value) => setActiveTab(value)}\n      >\n        <Tab label=\"Local Economy\" value={0} />\n        <Tab label=\"Buy Calculator\" value={1} />\n        <Tab label=\"Sell Calculator\" value={2} />\n      </Tabs>\n      {content}\n    </Paper>\n  )\n}\n\nexport default TradingCalculator","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './components'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}