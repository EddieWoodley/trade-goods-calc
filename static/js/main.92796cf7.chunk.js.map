{"version":3,"sources":["components/trade_goods_table/trade_goods_table.js","model/trade_goods/trade_goods.js","model/demand_levels/demand_levels.js","components/app/app.js","serviceWorker.js","index.js"],"names":["displayPrice","price","gp","Math","floor","gpRemainder","sp","cp","result","trim","displayModifier","modifier","percentage","useStyles","makeStyles","theme","root","flexGrow","grid","marginBottom","spacing","button","marginRight","TradeGoodsTable","props","classes","tradeGoods","demandLevels","defaultDemandLevelIndex","length","useState","map","tradeGood","demand","isSpeciality","units","items","setItems","tradeCheckModifier","setTradeCheckModifier","specialityModifier","setSpecialityModifier","rollDice","max","random","totalModifier","item","className","Grid","container","xs","sm","Button","variant","color","onClick","updatedItems","index","demandRoll","console","log","title","findIndex","demandLevel","maxRoll","specialityItemRoll","event","forEach","navigator","clipboard","writeText","md","TextField","label","fullWidth","type","value","min","step","onChange","e","parseFloat","target","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","size","TableBody","key","scope","Select","updateDemand","MenuItem","Input","placeholder","updateUnits","totalPrice","TradeGoods","DemandLevels","toolbar","mixins","App","CssBaseline","Container","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.92796cf7.chunk.js","sourcesContent":["import { default as React, useState } from 'react'\nimport { \n  Button,\n  Input,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Select,\n  MenuItem,\n  makeStyles,\n  TextField,\n  Grid\n} from '@material-ui/core'\n\nconst displayPrice = (price) => {\n  const gp = Math.floor(price / 100)\n  const gpRemainder = price % 100\n  const sp = Math.floor(gpRemainder / 10)\n  const cp = Math.floor(gpRemainder % 10)\n  let result = \"\"\n  if (gp !== 0) {\n    result += `${gp}\\u00A0gp `\n  }\n  if (sp !== 0) {\n    result += `${sp}\\u00A0sp `\n  }\n  if (cp !== 0) {\n    result += `${cp}\\u00A0cp`\n  }\n  return result.trim()\n}\n\nconst displayModifier = (modifier) => {\n  const percentage = Math.floor(modifier * 100)\n  if (percentage >= 0) {\n    return `+${percentage}%`\n  } else {\n    return `${percentage}%`\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  grid: {\n    marginBottom: theme.spacing(2)\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  }\n}))\n\nconst TradeGoodsTable = (props) => {\n\n  const classes = useStyles()\n  const tradeGoods = props.tradeGoods || []\n  const demandLevels = props.demandLevels || []\n  const defaultDemandLevelIndex = Math.floor(demandLevels.length / 2)\n\n  const [items, setItems] = useState(tradeGoods.map((tradeGood) => {\n    return {\n      tradeGood: tradeGood,\n      demand: defaultDemandLevelIndex,\n      isSpeciality: false,\n      units: 1\n    }\n  }))\n\n  const [tradeCheckModifier, setTradeCheckModifier] = useState(0)\n  const [specialityModifier, setSpecialityModifier] = useState(0)\n\n  const rollDice = (max) => {\n    return Math.floor(Math.random() * max) + 1\n  }\n\n  const rollEconomy = () => {\n    let updatedItems = tradeGoods.map((tradeGood, index) => {\n      let demandRoll = rollDice(20)\n      console.log(`Rolled ${demandRoll} for demand of ${tradeGood.title}`)\n      let demandIndex = demandLevels.findIndex((demandLevel) => {\n        return demandRoll <= demandLevel.maxRoll\n      })\n      return {\n        tradeGood: tradeGood,\n        demand: demandIndex,\n        isSpeciality: false,\n        units: items[index].units\n      }\n    })\n    const specialityItemRoll = rollDice(2)\n    console.log(`Rolled ${specialityItemRoll} for speciality item`)\n    if (specialityItemRoll > 1) {\n      updatedItems[rollDice(updatedItems.length) - 1].isSpeciality = true\n    }\n    setItems(updatedItems)\n  }\n\n  const updateUnits = (event, index) => {\n    const updatedItems = [...items]\n    updatedItems[index].units = event.target.value\n    setItems(updatedItems)\n  }\n\n  const updateDemand = (event, index) => {\n    const updatedItems = [...items]\n    updatedItems[index].demand = event.target.value\n    setItems(updatedItems)\n  }\n\n  const totalModifier = (item) => {\n    const demand = demandLevels[item.demand]\n    return demand.modifier + tradeCheckModifier + specialityModifier\n  }\n\n  const totalPrice = (item) => {\n    const modifier = 1 + totalModifier(item)\n    return Math.max(1, item.tradeGood.price * modifier * item.units)\n  }\n\n  const copyBBCode = (event) => {\n    let result = \"[table]\\n\"\n    result += \"[tr]\"\n    result += \"[th]Trade Good[/th]\"\n    result += \"[th]Base Price[/th]\"\n    result += \"[th]Demand[/th]\"\n    result += \"[/tr]\\n\"\n    items.forEach(item => {\n      const demand = demandLevels[item.demand]\n      result += \"[tr]\"\n      result += `[td]${item.tradeGood.title}[/td]`\n      result += `[td]${displayPrice(item.tradeGood.price)}[/td]`\n      result += `[td]${(demand.title)}[/td]`\n      result += \"[/tr]\\n\"\n    });\n    result += \"[/table]\"\n    navigator.clipboard.writeText(result);\n  }\n  \n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1} className={classes.grid}>\n        <Grid item xs={12} sm={8}>\n          <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={rollEconomy}>Roll Local Economy</Button>\n          <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={copyBBCode}>Copy BBCode</Button>\n        </Grid>\n        <Grid item xs={6} md={2}>\n          <TextField label=\"Trade Check Modifier\" fullWidth type=\"number\" value={tradeCheckModifier} min=\"-0.2\" max=\"0.2\" step=\"0.5\" onChange={e => setTradeCheckModifier(parseFloat(e.target.value))} />\n        </Grid>\n        <Grid item xs={6} md={2}>\n          <TextField label=\"Speciality Modifier\" fullWidth type=\"number\" value={specialityModifier} min=\"0\" max=\"0.2\" step=\"0.5\" onChange={e => setSpecialityModifier(parseFloat(e.target.value))} />\n        </Grid>\n      </Grid>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Trade Good</TableCell>\n              <TableCell>Base Price</TableCell>\n              <TableCell>Demand</TableCell>\n              <TableCell>Demand Modifier</TableCell>\n              <TableCell>Speciality</TableCell>\n              <TableCell>Total Price Modifier</TableCell>\n              <TableCell size=\"small\">Units</TableCell>\n              <TableCell>Price</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.map((item, index) => {\n              const demand = demandLevels[item.demand] || demandLevels[defaultDemandLevelIndex]\n              return (\n              <TableRow key={item.tradeGood.title}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {item.tradeGood.title}\n                  </TableCell>\n                  <TableCell>{displayPrice(item.tradeGood.price)}</TableCell>\n                  <TableCell>\n                    <Select value={item.demand} onChange={e => updateDemand(e, index)}>\n                      {demandLevels.map((demandLevel, index) => (\n                        <MenuItem key={index} value={index}>{demandLevel.title}</MenuItem>\n                      ))}\n                    </Select>\n                  </TableCell>\n                  <TableCell>{displayModifier(demand.modifier)}</TableCell>\n                  <TableCell>{item.isSpeciality ? \"Yes\" : \"No\"}</TableCell>\n                  <TableCell>{displayModifier(totalModifier(item))}</TableCell>\n                  <TableCell><Input size=\"small\" type=\"number\" placeholder=\"Units\" value={item.units} onChange={e => updateUnits(e, index)} /></TableCell>\n                  <TableCell>{displayPrice(totalPrice(item))}</TableCell>\n                </TableRow>\n              )}\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default TradeGoodsTable","let TradeGoods = [\n  {\n    title: \"1 lb. of wheat\",\n    price: 1\n  },\n  {\n    title: \"1 lb. of flour or one chicken\",\n    price: 2\n  },\n  {\n    title: \"1 lb. of salt\",\n    price: 5\n  },\n  {\n    title: \"1 lb. of iron or 1 sq. yd. of canvas\",\n    price: 10\n  },\n  {\n    title: \"1 sq. yd. of cotton cloth\",\n    price: 50\n  },\n  {\n    title: \"1 lb. of ginger or one goat\",\n    price: 100\n  },\n  {\n    title: \"1 lb. of cinnamon or pepper, or one sheep\",\n    price: 200\n  },\n  {\n    title: \"1 lb. of cloves or one pig\",\n    price: 300\n  },\n  {\n    title: \"1 lb. of silver or 1 sq. yd. of linen\",\n    price: 500\n  },\n  {\n    title: \"1 sq. yd. of silk or one cow\",\n    price: 1000\n  },\n  {\n    title: \"1 lb. of saffron or one ox\",\n    price: 1500\n  }\n]\n\nexport default TradeGoods","const DemandLevels = [\n  {\n    \"title\": \"Extreme Demand\",\n    \"modifier\": 0.15,\n    \"maxRoll\": 1\n  },\n  {\n    \"title\": \"High Demand\",\n    \"modifier\": 0.10,\n    \"maxRoll\": 5\n  },\n  {\n    \"title\": \"Neutral\",\n    \"modifier\": 0,\n    \"maxRoll\": 14\n  },\n  {\n    \"title\": \"Surplus\",\n    \"modifier\": -0.10,\n    \"maxRoll\": 19\n  },\n  {\n    \"title\": \"Extreme Surplus\",\n    \"modifier\": -0.15,\n    \"maxRoll\": 20\n  }\n]\n\nexport default DemandLevels","import React from 'react'\nimport { TradeGoodsTable } from '../trade_goods_table'\nimport { TradeGoods, DemandLevels } from '../../model'\nimport { makeStyles, Container, CssBaseline } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  toolbar: theme.mixins.toolbar,\n}));\n\nconst App = () => {\n\n  const classes = useStyles()\n  \n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <div className={classes.toolbar} />\n      <Container>\n        <TradeGoodsTable tradeGoods={TradeGoods} demandLevels={DemandLevels} />\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './components'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}